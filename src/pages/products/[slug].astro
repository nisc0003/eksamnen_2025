---
//@ts-nocheck
import Layout from "../../layouts/Layout.astro";

export async function getStaticPaths() {
  const url =
    "https://qxzbnouobeqeoleqrllh.supabase.co/rest/v1/AlefarmBrewingEXAM";
  const key =
    "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InF4emJub3VvYmVxZW9sZXFybGxoIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDcwNDQ4MTYsImV4cCI6MjA2MjYyMDgxNn0.XW2IwfWGSgwE375yAIMAo0x-89W7Jq6Jn_n7sg6Ummk";

  const data = await fetch(url, { headers: { apikey: key } }).then((res) =>
    res.json(),
  );

  return data.map((product) => ({
    params: { slug: String(product.id) },
    props: { id: product.id },
  }));
}

const { id } = Astro.props;

const url = `https://qxzbnouobeqeoleqrllh.supabase.co/rest/v1/AlefarmBrewingEXAM?id=eq.${id}`;
const key =
  "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InF4emJub3VvYmVxZW9sZXFybGxoIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDcwNDQ4MTYsImV4cCI6MjA2MjYyMDgxNn0.XW2IwfWGSgwE375yAIMAo0x-89W7Jq6Jn_n7sg6Ummk";

const [product] = await fetch(url, { headers: { apikey: key } }).then((res) =>
  res.json(),
);

const showSoldOut = product.soldout === true;
const showDefault = !product.soldout;
---

<Layout>
  <section>
    <div>
      <a href="../products/products.astro">‚Üê tilbage</a>
      <!-- <img src={`/beer-card_images/${product.img}`} alt={product.title} /> -->
      <img src={`/beer-card_images/${product.img}`} alt={product.title} />
    </div>
    <article>
      <h4>{product.title}</h4>
      <h5>{product.title2}</h5>
      <h5>{product.type}</h5>
      <h6 class="discount">{product.discount_percentage}</h6>
      <p class="discription">{product.description}</p>

      <div class="productBox">
        <p class="ingredients"><strong>{product.ingredient}</strong></p>

        <p class="date"><em>{product.date}</em></p>
        <p>
          {product.category}, {product.category2}
        </p>
      </div>
      {
        showDefault && (
          <>
            <div class="bottomBox">
              <div class="price_box sale_prie_box">
                <div>
                  <p class="price_text">Starting at</p>
                  <h6>{product.price} DKK</h6>
                </div>
                <div class="old_price">
                  {product.Old_price && (
                    <p class="old_price_p">used to be {product.Old_price}</p>
                  )}
                </div>
              </div>
              <button
                class="cta1 add-to-cart old_price_button"
                data-product={JSON.stringify({
                  img: product.img,
                  title: product.title,
                  title2: product.title2,
                  price: product.price,
                  Old_price: product.Old_price,
                  discount_percentage: product.discount_percentage,
                  soldout: product.soldout,
                  category: product.category,
                  category2: product.category2,
                  type: product.type,
                  path: product.path,
                })}
              >
                Add to basket
              </button>
            </div>
          </>
        )
      }

      {
        showSoldOut && (
          <>
            <div class="bottomBox">
              <div class="price_box">
                <div>
                  <p class="price_text">Udsolgt</p>
                  <h6 class="sold_out_h6 udsolgt">{product.price}DKK</h6>
                </div>
              </div>
              <button class="cta1 add-to-cart udsolgtButton">Udsolgt</button>
            </div>
          </>
        )
      }
    </article>
  </section>
</Layout>

<style>
  section {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  }

  article {
    display: grid;
    gap: 1rem;
    place-content: start;
    /* background-color: rgba(255, 251, 244, 1); */
    padding: 1.5rem 1rem;

    grid-row: auto;
  }

  div {
    display: flex;
    gap: 1rem;
    align-items: center;
    justify-content: end;
  }

  .price {
    font-size: 2rem;
    font-weight: 600;
    opacity: 80%;
    text-align: right;
  }

  img {
    height: 85vw;
    width: auto;
    margin: 1rem auto 0rem auto;
  }

  a {
    color: var(--second-color);
    margin: 1rem;
    font-size: 3cqw;
    text-transform: lowercase;
    font-family: "Montserrat", sans-serif;
    font-weight: 300;
  }

  .productBackground {
    /* background-image: url(../../../public/slug_background.webp); */
    /* background-size: cover; */

    display: grid;
    grid-template-columns: 1fr;
  }

  h4 {
    margin: 0vw;
  }

  h5 {
    font-size: 3cqw;
    margin-top: -1rem;
  }

  .discription {
    margin-top: 0rem;
    font-size: 3.5cqw;
  }

  .productBox {
    font-size: 3.5cqw;
    border: 1px solid var(--second-color);
    padding: 1rem;
    border-radius: 0.1rem;

    display: grid;
    grid-template-columns: 1fr;
    gap: 1rem;
    grid-template-rows: auto;
  }

  .bottomBox {
    display: grid;
    grid-template-columns: 1fr 1fr;
    margin-bottom: 5vw;
  }

  button {
    font-size: 2.5cqw;
    padding: 0.6rem 3rem;
  }

  .price_box {
    border: 1px solid var(--second-color);
    border-radius: 0.1rem;
  }

  .price_box p {
    font-size: 3cqw;
    padding-top: 0.5rem;
  }

  h6 {
    font-size: 3cqw;
    padding-top: 0.5rem;
    padding-right: 0.5rem;
  }

  a {
    position: absolute;
    top: 35vw;
    left: 2vw;
  }

  @media screen and (min-width: 610px) {
    section {
      display: grid;
      grid-template-columns: 1fr 1fr;
      grid-template-rows: auto;
      gap: 5rem;

      margin: 5vw auto;
    }

    img {
      height: 50vw;
      width: auto;
      margin: -1rem auto 2rem auto;

      grid-column: 2;
    }

    a {
      margin: 3rem auto auto 0rem;
      font-size: 1.3cqw;

      grid-column: 1;
      grid-row: 1;

      top: 10vw;
      left: 8vw;
    }

    article {
      grid-column: 1;
      grid-row: 1;

      margin-left: 7vw;
    }

    h4 {
      font-size: 3cqw;
    }

    h5 {
      font-size: 2cqw;
    }

    .discription {
      font-size: 1.5cqw;
    }

    .price_box p {
      font-size: 1.3cqw;
      padding: 0.7rem;
    }

    .price_box {
      width: 20vw;
    }

    h6 {
      font-size: 1.5cqw;
    }

    .cta1 {
      font-size: 1cqw;
      padding: 1.3rem 3rem;
    }
  }

  /* udsolgt og tilbud */

  .old_price_p {
    color: rgb(170, 170, 170);
    font-style: italic;
    padding-right: 0.5rem;
    padding-bottom: 0.5rem;
  }

  .old_price_button {
    padding: 1.4rem 3rem;
  }

  .sale_prie_box {
    display: grid;
    grid-template-columns: 1fr;
    grid-row: 1fr 1fr;

    gap: 0.2rem;
  }

  .udsolgt {
    color: rgb(185, 185, 185);
  }

  .udsolgtButton {
    background-color: rgb(212, 212, 212);
  }

  .discount {
    color: var(--filter-color_new);

    font-weight: 700;
  }

  @media screen and (min-width: 610px) {
    .old_price_p {
      color: rgb(170, 170, 170);
      font-style: italic;
      padding: 0rem;
    }

    .sale_prie_box {
      display: grid;
      grid-template-columns: 1fr;
      grid-row: 1fr 1fr;

      gap: 0.2rem;
    }

    .udsolgt {
      color: rgb(185, 185, 185);
    }

    .udsolgtButton {
      background-color: rgb(212, 212, 212);
    }
  }
</style>
