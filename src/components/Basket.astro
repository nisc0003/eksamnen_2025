---
// import type ProductCard from "./ProductCard.astro";
import ProductCard from "./ProductCard.astro";
// import ProductCard={}
// import ProductCard2={}
// @ts-nocheck
---

--- const {(cartItems = [])} = Astro.props; // Expect array of products passed in
props ---

<section class="cart_container inactive">
  <section class="top_box">
    <div class="x">
      <span class="span1"></span>
      <span class="span2"></span>
    </div>
  </section>

  <section class="cart_sub">
    {
      // Loop over cartItems and render each product
      cartItems.map((item) => {
        const showSoldOut = item.soldout === true; // check if sold out
        const showDefault = !item.soldout; // else show default price

        return (
          <div class="cart_list" key={item.path}>
            <div class="product">
              <div class="product_image">
                {/* Produktbillede */}
                <img
                  src={`/beer-card_images/${item.img}`}
                  alt={item.title}
                  class="product_img"
                />
              </div>
              <div class="product_info">
                {/* antal */}
                <p>1 - Stk</p>
                {/* produkt navn */}
                <p>{item.title}</p>

                {/* priser hvis ikke udsolgt */}
                {showDefault && (
                  <>
                    {/* gammel pris med gennemstreget */}
                    {item.Old_price && (
                      <div class="old_price">
                        <p>{item.Old_price} kr.</p>
                      </div>
                    )}
                    {/* nuværende pris */}
                    <p>{item.price} kr.</p>
                  </>
                )}

                {/* priser og udsolgt tekst hvis udsolgt */}
                {showSoldOut && (
                  <>
                    <p class="sold_out_text">Udsolgt</p>
                    <p>{item.price} kr.</p>
                  </>
                )}
              </div>
            </div>
          </div>
        );
      })
    }
  </section>

  {/* subtotal */}
  <section class="price_amount">
    <div class="price_original">
      <p>Subtotal</p>
      <p>XXX</p>
    </div>
    <hr />
    <div class="price_discounted">
      <p>Rabat</p>
      <div class="discount">
        <p>XXX</p>
      </div>
    </div>
    <hr />
  </section>

  {/* total pris */}
  <section class="total_price">
    <div><h3>Pris I alt</h3></div>
    <div class="price_value">
      <h3>XXX</h3>
      <h3>KR</h3>
    </div>
  </section>

  {/* knapper */}
  <section class="cart_buttons">
    <button class="cart_page"><p class="p_b">Gå til kurv</p></button>
    <button class="buy_page"><p class="p_b">Køb nu</p></button>
  </section>
</section>

<style>
  /* Du kan beholde eller tilpasse dine styles her */
  .product {
    display: flex;
    gap: 1rem;
  }
  .product_image img {
    width: 80px;
    height: auto;
  }
  .product_info {
    display: flex;
    flex-direction: column;
    justify-content: center;
  }
  .old_price p {
    text-decoration: line-through;
    color: gray;
  }
  .sold_out_text {
    color: red;
    font-weight: 700;
  }
</style>

<script>
  // åbner kurv overlay ved klik på basket-ikon
  const basket = document.querySelector(".basket_icon");
  const basket_menu = document.querySelector(".cart_container");
  const basket_x = document.querySelector(".x");

  basket.addEventListener("click", () => {
    basket_menu.classList.add("active_anim");
    basket_menu.classList.add("active");
    basket_menu.classList.remove("inactive");
  });

  // lukker kurv overlay ved klik på kryds
  basket_x.addEventListener("click", () => {
    basket_menu.classList.add("inactive_anim");
    basket_menu.classList.add("inactive");
    basket_menu.classList.remove("active");
    basket_menu.classList.remove("active_anim");
  });
</script>
