<!-- INDKØBSKURVEN (overlay) -->
<section class="cart_container inactive">
  <div class="x">
    <span class="span1"></span>
    <span class="span2"></span>
  </div>

  <button class="delete-all">Slet alt</button>

  <!-- Produktliste og kontrolknap -->
  <section class="cart_sub">
    <div class="cart_controls"></div>
    <div class="cart_list"></div>
  </section>

  <!-- Prisoversigt -->
  <section class="price_amount">
    <div class="price_original">
      <p>Subtotal</p>
      <p>0,00 kr.</p>
    </div>
    <hr />
    <div class="price_discounted">
      <p>Rabat</p>
      <div class="discount"><p>0,00 kr.</p></div>
    </div>
    <hr />
  </section>

  <!-- Total pris -->
  <section class="total_price">
    <h3>Pris i alt</h3>
    <div class="price_value">
      <h3>0,00</h3>
      <h3>KR</h3>
    </div>
  </section>

  <!-- Knapper til checkout eller kurv-side -->
  <section class="cart_buttons">
    <button class="cart_page"><p>Gå til kurv</p></button>
    <button class="buy_page"><p>Køb nu</p></button>
  </section>
</section>

<script is="client">
  // Eksisterende JavaScript forbliver uændret
  const basket = document.querySelector(".basket_icon");
  const basketMenu = document.querySelector(".cart_container");
  const basketClose = document.querySelector(".x");

  basket?.addEventListener("click", () => {
    basketMenu.classList.add("active_anim", "active");
    basketMenu.classList.remove("inactive", "inactive_anim");
  });

  basketClose?.addEventListener("click", () => {
    basketMenu.classList.add("inactive_anim", "inactive");
    basketMenu.classList.remove("active", "active_anim");
  });

  let cart = JSON.parse(localStorage.getItem("cart")) || [];

  const updateCartDisplay = () => {
    const cartSub = document.querySelector(".cart_sub .cart_list");
    cartSub.innerHTML = "";

    let subtotal = 0;
    let discountTotal = 0;

    cart.forEach((item, index) => {
      const { img, title, title2, price, Old_price, quantity = 1 } = item;
      const currentPrice = parseFloat(price);
      const oldPrice = Old_price ? parseFloat(Old_price) : null;
      const discount = oldPrice ? (oldPrice - currentPrice) * quantity : 0;
      subtotal += currentPrice * quantity;
      discountTotal += discount;

      const product = document.createElement("div");
      product.className = "product";
      product.innerHTML = `
  <div class="product_image">
    <img src="/beer-card_images/${img || "placeholder.webp"}" alt="${title}" />
  </div>
  <div class="product_info">
    <h5 class="product_title">${title}</h5>
    ${title2 ? `<h6 class="product_subtitle">${title2}</h6>` : ""}


    <div>
      <p class="p_quantity">${quantity} stk.</p>
    </div>

        ${
          Old_price
            ? `
    <div class="old_price_row">
      <h6 class="h6_Old_price">${Old_price} kr.</h6>
    </div>
    `
            : ""
        }
    
    <div class="total_row">
      <h6 class="h6_price"> ${(currentPrice * quantity).toFixed(2)} DKK.</h6>
    </div>
    
    
    <button class="delete-item" data-index="${index}">Slet</button>
  </div>
`;

      cartSub.appendChild(product);
    });

    document.querySelector(".price_original p:last-child").textContent =
      subtotal.toFixed(2) + " kr.";
    document.querySelector(".discount p").textContent =
      discountTotal.toFixed(2) + " kr.";
    document.querySelector(".total_price .price_value h3").textContent = (
      subtotal - discountTotal
    ).toFixed(2);

    localStorage.setItem("cart", JSON.stringify(cart));
  };

  document.addEventListener("click", (e) => {
    if (e.target.classList.contains("add-to-cart")) {
      const productData = JSON.parse(e.target.getAttribute("data-product"));
      productData.quantity = 1;
      const existingIndex = cart.findIndex(
        (item) =>
          item.title === productData.title &&
          item.title2 === productData.title2,
      );

      if (existingIndex !== -1) {
        cart[existingIndex].quantity += 1;
      } else {
        cart.push(productData);
      }

      updateCartDisplay();
      basketMenu.classList.add("active_anim", "active");
      basketMenu.classList.remove("inactive", "inactive_anim");
    }

    if (e.target.classList.contains("delete-all")) {
      cart = [];
      updateCartDisplay();
    }

    if (e.target.classList.contains("delete-item")) {
      const index = parseInt(e.target.getAttribute("data-index"));
      if (!isNaN(index)) {
        cart.splice(index, 1);
        updateCartDisplay();
      }
    }
  });

  const header = document.querySelector("header");

  const setCartTop = () => {
    const headerHeight = header.offsetHeight;
    if (!basketMenu.classList.contains("scrolled-past")) {
      basketMenu.style.top = `${headerHeight}px`;
      basketMenu.style.height = `calc(100vh - ${headerHeight}px)`;
    }
  };

  window.addEventListener("scroll", () => {
    const scrollY = window.scrollY;
    const headerHeight = header.offsetHeight;

    if (scrollY >= headerHeight) {
      basketMenu.classList.add("scrolled-past");
      basketMenu.style.top = "0px";
      basketMenu.style.height = "100vh";
    } else {
      basketMenu.classList.remove("scrolled-past");
      setCartTop();
    }
  });

  window.addEventListener("resize", setCartTop);

  document.addEventListener("DOMContentLoaded", () => {
    updateCartDisplay();
    setCartTop();
  });
</script>

<style>
  /* OVERLAY: Fast i højre side, under header, 30% bred på store skærme */
  .cart_container {
    position: fixed;
    right: 0;
    width: 100vw;
    height: auto;
    background: var(--font-color-white); /* Hvid baggrund */
    z-index: 10;
    padding: 2rem;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    transition:
      top 0.3s ease,
      height 0.3s ease,
      transform 0.4s ease;
    transform: translateY(-200%);
  }

  /* Når aktiv, glidende ind */
  .cart_container.active {
    transform: translateY(0%);
  }

  /* Når scrollet forbi header fylder kurven hele højden */
  .cart_container.scrolled-past {
    top: 0 !important;
    height: 100vh !important;
  }

  /* Typografi - Montserrat til overskrifter, Inter til brødtekst */
  .cart_container h3 {
    font-family: "Montserrat", sans-serif;
    color: var(--second-color); /* Sort tekst */
    font-weight: 700;
  }

  .cart_container p {
    font-family: "Inter", sans-serif;
    color: var(--second-color); /* Sort tekst */
  }

  /* Luk-knap (X) øverst højre */
  .x {
    position: absolute;
    right: 1rem;
    top: 1rem;
    width: 2.5rem;
    height: 2.5rem;
    cursor: pointer;
  }

  .x span {
    position: absolute;
    width: 2rem;
    height: 0.25rem;
    background: var(--second-color); /* Sort farve til X */
    border-radius: 2px;
  }

  .span1 {
    transform: rotate(45deg);
  }

  .span2 {
    transform: rotate(-45deg);
  }

  /* Knap til at slette alt */
  .cart_controls {
    display: flex;
    justify-content: flex-end;
    margin: 1rem 0;
  }

  .delete-all {
    background: var(--second-color); /* Sort baggrund */
    color: var(--font-color-white); /* Hvid tekst */
    padding: 0.5rem 1rem;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-family: "Inter", sans-serif;
    font-weight: 600;
  }

  /* Produktliste med scroll */
  .cart_sub {
    flex-grow: 1;
    overflow-y: auto;
    margin: 2rem 0 1rem 0;
  }

  :global(.product_image img) {
    max-width: 100%;
    max-height: 100px;
    object-fit: contain;
  }
  /* Grid-layout for produkter */
  :global(.cart_list) {
    display: grid;
    grid-template-columns: 1fr;
    gap: 1rem;
  }

  :global(.product) {
    display: grid;
    grid-template-columns: 1fr 2fr;
    gap: 1rem;
    align-items: start;
  }

  :global(.product_title) {
    text-transform: uppercase;
    font-weight: 700;
  }
  :global(.h6_price) {
    font-style: oblique;
    font-weight: 600;
  }

  :global(.p_quantity) {
    font-weight: 300;
    opacity: 90%;
  }
  :global(.h6_Old_price) {
    font-style: oblique;
    text-decoration: line-through;
    opacity: 80%;
  }

  .product_image {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .product_info {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
  }

  .product_info p {
    margin: 0;
    font-size: 0.9rem;
    font-family: "Inter", sans-serif;
    color: var(--second-color); /* Sort tekst */
  }

  /* Gammel pris med gennemstregning */
  .old_price p {
    text-decoration: line-through;
    color: #777; /* Lysere grå til gennemstreget pris */
  }

  /* Prisoversigt margener */
  .price_amount,
  .total_price {
    margin: 1rem 0;
  }

  .price_amount > div,
  .total_price {
    display: flex;
    justify-content: space-between;
  }

  /* Knapper nederst i kurven */
  .cart_buttons {
    display: flex;
    gap: 1rem;
  }

  .cart_buttons button {
    flex: 1;
    padding: 0.75rem;
    border: none;
    cursor: pointer;
    border-radius: 0.5rem;
    font-family: "Inter", sans-serif;
    font-weight: 600;
  }

  .cart_page {
    background: var(--font-color-white); /* Hvid baggrund */
    color: var(--second-color); /* Sort tekst */
    border: 1px solid var(--second-color);
  }

  .buy_page {
    background: var(--second-color); /* Sort baggrund */
    color: var(--font-color-white); /* Hvid tekst */
  }

  /* Media query til større skærme */
  @media (min-width: 800px) {
    .cart_container {
      width: 30vw;
      height: 100vh;
    }

    .cart_buttons button {
      padding: 1rem;
    }
  }
</style>
